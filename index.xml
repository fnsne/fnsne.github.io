<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>fnsne&#39;s coding world</title>
        <link>https://coding.fnsne.com/</link>
        <description>Recent content on fnsne&#39;s coding world</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-TW</language>
        <copyright>fnsne</copyright>
        <lastBuildDate>Thu, 20 Feb 2025 22:02:49 +0800</lastBuildDate><atom:link href="https://coding.fnsne.com/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>英文不好的我_如何在1個月理解國外團隊維護的產品</title>
        <link>https://coding.fnsne.com/posts/how-i-fast-understand-new-project/</link>
        <pubDate>Thu, 20 Feb 2025 22:02:49 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/how-i-fast-understand-new-project/</guid>
        <description>&lt;p&gt;到現在，換新工作一段時間了，來分享一下，我是如何適應並且慢慢理解產品是怎麼寫的
主要就兩個步驟：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;分析並假設&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;驗證，獲得回饋&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分析並假設&#34;&gt;分析並假設
&lt;/h2&gt;&lt;p&gt;我是用heptabase的白板來分析的&lt;/p&gt;
&lt;p&gt;流程簡單來說，就是去讀code，然後：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立理解的骨架&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;遇到「名詞」、「模組」、「function」、「class」的時候，&lt;/p&gt;
&lt;p&gt;就建立一張卡片，&lt;/p&gt;
&lt;p&gt;一張標題為那個東西的卡片，&lt;/p&gt;
&lt;p&gt;並寫上我目前對它的理解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;填充新發現的理解&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在每次靈感來臨、&lt;/p&gt;
&lt;p&gt;突然理解某個東西的時候，&lt;/p&gt;
&lt;p&gt;就到對應的那張卡片上面做筆記。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就這樣，分析的部分就這麼簡單，但對於初步理解很好用。&lt;/p&gt;
&lt;h2 id=&#34;驗證獲得回饋&#34;&gt;驗證，獲得回饋
&lt;/h2&gt;&lt;p&gt;也很簡單，就是每次找到小發現後，就&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;趕快去code的其他地方，驗證看看我的理解是否正確。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;詢問國外同事，我的理解是否正確。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;嘗試接一些和小發現相關的任務，像我就膽大的接了一張明顯很複雜的重構單。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（雖然我還沒處理完，但很明顯的，在研究分析並重構這份code的時候，我理解到了非常多這個產品相關的內容。）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就這樣，我藉由這套方法，讓我在沒有太大心理阻力，並且要和國外同事用英文溝通的情況下，快速理解產品的內容，還有要怎麼寫。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我真的覺得接了一張複雜重構單，是我一個進公司以來做過最正確的一件事。&lt;/p&gt;
&lt;p&gt;反正即使失敗，我也獲得了失敗的經驗，&lt;/p&gt;
&lt;p&gt;這些經驗會化為未來成功的踏腳石。&lt;/p&gt;
&lt;p&gt;所有的嘗試都是有意義的，&lt;/p&gt;
&lt;p&gt;他們會在未來給予我們幫助，&lt;/p&gt;
&lt;p&gt;所以要多嘗試、並且紀錄下來。&lt;/p&gt;
&lt;p&gt;P.S. 感謝現在有ChatGPT的存在，讓我的英文能以更好讀的形式發出去。不然我連問問題可能都很難溝通啊。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>神奇的Kobo帳號生態</title>
        <link>https://coding.fnsne.com/posts/magical-kobo-account-ecosystem/</link>
        <pubDate>Thu, 06 Feb 2025 21:58:58 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/magical-kobo-account-ecosystem/</guid>
        <description>&lt;h2 id=&#34;先下結論要用什麼功能就得要用那個關聯帳號來登入&#34;&gt;先下結論：要用什麼功能，就得要用那個關聯帳號來登入
&lt;/h2&gt;&lt;p&gt;例如要使用樂天點數，就得要用Rakuten帳號登入kobo。&lt;/p&gt;
&lt;h2 id=&#34;前情提要&#34;&gt;前情提要
&lt;/h2&gt;&lt;p&gt;幾天前在檢查email的時候，發現有一封pchome通知P點即將到期的信件。&lt;/p&gt;
&lt;p&gt;原本它應該會跟以往一樣，被我用強大的自制力（指打開pchome劃了30分鐘）&lt;/p&gt;
&lt;p&gt;繼續放著，直到點數消失，不花一毛錢。&lt;/p&gt;
&lt;p&gt;但我最近正好又對水彩產生了好奇，所以開始找尋有沒有動畫、漫畫風格的水彩教學書。&lt;/p&gt;
&lt;p&gt;結果正好找到一本&lt;a class=&#34;link&#34; href=&#34;https://r10.to/hPxfx6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《蘿莉塔風格的描繪技法：基本六色篇》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;一看試閱，唉，這樣的效果居然可以用6色畫出來。&lt;/p&gt;
&lt;p&gt;再看一看，居然有電子書。趕緊到kobo上面查，還真的查到了。&lt;/p&gt;
&lt;p&gt;原本下一步就是直接在kobo上面刷卡買書了。
但突然想到開工那天，和同事閒聊的時候，聽到他都是用pchome來買kobo的書的。&lt;/p&gt;
&lt;p&gt;所以我有了猜想，是不是可以用P點來買書呢，可以的話，就省了快一半耶。&lt;/p&gt;
&lt;p&gt;然後就開始來研究怎麼把pchome帳號和kobo帳號關聯起來。&lt;/p&gt;
&lt;h2 id=&#34;pchome帳號要用pchome帳號登入kobo&#34;&gt;pchome帳號要用pchome帳號登入kobo
&lt;/h2&gt;&lt;p&gt;原本我是打算直接在Kobo賬戶設定頁面上，新增pchome帳號即可。&lt;/p&gt;
&lt;p&gt;但kobo的程式不知道是怎麼寫的，不管我怎麼在kobo的賬戶設定上，使用pchome登入，每次最後都只會跳到出403頁面。&lt;/p&gt;
&lt;p&gt;最後google到有人提到，kobo要鏈接pchome，得要&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登出&lt;/li&gt;
&lt;li&gt;選擇其它登入方式&lt;/li&gt;
&lt;li&gt;選擇pchome登入&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我猜，應該是賬戶設定頁面的關聯其它帳號，沒有寫好。
甚至pchome登入，只是關聯起來，但事實上現在登入的帳號，
還是pchome帳號，只是在kobo網站，會顯示關聯的kobo帳號的資訊而已，
但主題還是pchome帳號。&lt;/p&gt;
&lt;p&gt;至少，最後我是成功把kobo帳號和pchome帳號關聯起來。
在pchome上面買的kobo書，也成功進入到kobo書庫上了。&lt;/p&gt;
&lt;h2 id=&#34;樂天點數要使用rakuten帳號登入才行&#34;&gt;樂天點數，要使用Rakuten帳號登入才行
&lt;/h2&gt;&lt;p&gt;然後在今天，準備要買其它書時，
眼睛剛好瞄到，怎麼好像少了什麼，少了顯示這次會給多少回饋樂天點數了。&lt;/p&gt;
&lt;p&gt;看了上面原本呈現我還有多少點數還沒用的地方，怎麼變成「不適用」了呢？&lt;/p&gt;
&lt;p&gt;不行啊，我還有過年買書的點數還沒到帳，還沒花啊。&lt;/p&gt;
&lt;p&gt;冷靜下來，想到了幾天前的經驗，我在想，
會不會是因為現在是使用pchome登入，所以失去了這個功能？&lt;/p&gt;
&lt;p&gt;所以趕緊登出帳號，用Rakuten帳號登入。&lt;/p&gt;
&lt;p&gt;結果還真的是這樣，我的樂天點數重新顯示出來了！&lt;/p&gt;
&lt;h2 id=&#34;其它意外&#34;&gt;其它意外
&lt;/h2&gt;&lt;p&gt;原本我登入都是使用Kobo帳號登入的，但不知道是關聯了pchome，
還是在&lt;a class=&#34;link&#34; href=&#34;#%e6%a8%82%e5%a4%a9%e9%bb%9e%e6%95%b8%e8%a6%81%e4%bd%bf%e7%94%a8rakuten%e5%b8%b3%e8%99%9f%e7%99%bb%e5%85%a5%e6%89%8d%e8%a1%8c&#34; &gt;重新登入樂天帳號&lt;/a&gt;時，
為了省事，我用了Google登入。&lt;/p&gt;
&lt;p&gt;結果導致我的Kobo帳號，變得無法用kobo帳號登入，
只能用google/pchome/Rakuten帳號來登入……&lt;/p&gt;
&lt;p&gt;好險最後用了kobo的忘記密碼功能，重新填上密碼，這才恢復了kobo帳號登入的功能。&lt;/p&gt;
&lt;p&gt;看來在用Google登入來關聯Kobo帳號的時候，Kobo可能把Kobo密碼洗掉了。
所以才會變得無法用原本的密碼登入……&lt;/p&gt;
&lt;p&gt;真的好神奇啊……Kobo……&lt;/p&gt;
&lt;h2 id=&#34;threads&#34;&gt;threads
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.threads.net/@fnsne/post/DFu8DC2vASU&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.threads.net/@fnsne/post/DFu8DC2vASU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>我對於Error Log的看法</title>
        <link>https://coding.fnsne.com/posts/about-error-log/</link>
        <pubDate>Fri, 17 Jan 2025 21:36:06 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/about-error-log/</guid>
        <description>&lt;p&gt;先講我的結論：我覺得log要儘量少用，頂多只能在最上層進入點使用。&lt;/p&gt;
&lt;p&gt;那這樣要怎麼知道發生錯誤的時候，是經由什麼途徑發生的？&lt;/p&gt;
&lt;p&gt;那就是在發生錯誤的時候，在錯誤再加上一些訊息，然後再往上傳，
讓最上層收到的error擁有一整串發生錯誤的錯誤訊息。
所以只要在最上層log一次error，就能在error當中看到這個錯誤從上到下的呼叫關係了。
而這好像也是golang官方所建議的寫法&lt;/p&gt;
&lt;p&gt;而要能最大化可閱讀性，我個人的建議是：
&lt;code&gt;在發生錯誤是，再wrap上在用什麼參數調用什麼工具發生錯誤了：錯誤訊息&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;當然這樣做還要配合使用，
&lt;code&gt;遇到錯誤時，一定要往上層傳遞，除非這個error已經有在這層處理完了&lt;/code&gt;
這樣才不會省略到某些錯誤，而在發生錯誤的時候，沒有log可以看。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;這癢做有個例外：像讀檔讀到盡頭，會收到io.EOF的這種情況，
這個錯誤本來就是讀檔的結束標誌，所以只要進入後續的對應的處理邏輯即可，不用回傳。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;實際上的做法大概會是長這樣&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//AccountServie.ChangeName()
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;account&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;accountRepo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;GetAccount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Errorf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;cannot get account&amp;lt;%s&amp;gt;: %w&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;account&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newName&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;accountRepo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;UpdateAccount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;account&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Errorf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;cannot update account&amp;lt;%s&amp;gt;: %w&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//handler
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;accountService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ChangeName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;cannot change name of account&amp;lt;%d&amp;gt; to %s: %v&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這樣寫，log出來的Error之後有一行，並且內容大概會長得像是下面這樣&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cannot change name of account&lt;fcb98bff-86d1-46bb-a522-99e3206f3ac1&gt; to Jacky:
cannot get account&lt;fcb98bff-86d1-46bb-a522-99e3206f3ac1&gt;:
record not found&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這樣就能知道是handler在做change name的時候發生錯誤，
然後在裡面則是在取得account物件的時候出錯了，而底下的錯誤則是根本沒有這個筆資料。&lt;/p&gt;
&lt;p&gt;而且還能知道&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;handler調用accountService時使用的id, newName&lt;/li&gt;
&lt;li&gt;accountService呼叫GetAccount時使用的id是什麼。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這樣做唯一的一個缺點就是，錯誤訊息可能會比較長。&lt;/p&gt;
&lt;p&gt;但只要都有照著這個規則來回傳錯誤訊息，就能讓一次的呼叫，
只有一組錯誤訊息，從而簡化閱讀錯誤訊息的困難了。&lt;/p&gt;
&lt;p&gt;我現在反倒覺得那種每層加log.Debug、log.Error的做法閱讀起來很困難，因為&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;訊息會到處都是&lt;/li&gt;
&lt;li&gt;訊息很難知道上下文（我知道可以加sessionID、requestID之類的，但這樣做，我覺得還是比較難閱讀）&lt;/li&gt;
&lt;li&gt;訊息有時和其它訊息是重複的（每層都log一次，所以會有很多錯誤訊息長得很像之類的）。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>一日清單</title>
        <link>https://coding.fnsne.com/posts/today-list/</link>
        <pubDate>Thu, 26 Dec 2024 22:39:42 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/today-list/</guid>
        <description>&lt;h1 id=&#34;一日清單&#34;&gt;一日清單
&lt;/h1&gt;&lt;p&gt;分享一個會讓一整天過得充實、有產能的簡單做法&lt;/p&gt;
&lt;p&gt;那就是把今天要做的事情，安排成一日清單&lt;/p&gt;
&lt;p&gt;我目前是使用&lt;a class=&#34;link&#34; href=&#34;https://r10.to/h5zKFE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《上線時間管理術》&lt;/a&gt;提到的一日清單的變體。&lt;/p&gt;
&lt;p&gt;那就是從今天期望要做的事情上面，找出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1件最重要最緊急的事情&lt;/li&gt;
&lt;li&gt;6件次重要的事情&lt;/li&gt;
&lt;li&gt;其它雜務&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就這樣&lt;/p&gt;
&lt;p&gt;非常簡單&lt;/p&gt;
&lt;p&gt;有了清單，就等於擁有了一個框架，一個今天要怎麼過的框架&lt;/p&gt;
&lt;p&gt;接下來就是很簡單的照著這個框架下去執行&lt;/p&gt;
&lt;p&gt;在有了這個清單後，接下來一整天就會過得非常的有目標、有方向。&lt;/p&gt;
&lt;p&gt;執行起來也會變得沒有阻力&lt;/p&gt;
&lt;p&gt;另外，還有一個地方需要注意，就是最重要的那件事情，要儘量切成能在半天內完成的等級。
如果沒有這樣做，就會有可能因為這件事情太大，而導致整天都在做這件事情。
甚至會感覺到這一整天什麼事情都沒有做。&lt;/p&gt;
&lt;p&gt;在開始嘗試把項目切小，儘量切成當天可以完成的程度後，
就會發現，它開始可以驅動其它任務的執行。&lt;/p&gt;
&lt;p&gt;什麼意思呢？&lt;/p&gt;
&lt;p&gt;就是當我完成了最重要的那件事情後，我就會獲得了一個成就感，
這個成就感就會驅動我有信心去做下一件事情，不論它是相關和完全不相關的任務。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;心得&#34;&gt;心得
&lt;/h2&gt;&lt;p&gt;有這樣做和沒有這樣做，對我來說，真的會是兩個不同的一天。
甚至越早這麼做，一整天的效率就會越好。&lt;/p&gt;
&lt;p&gt;這個是我有時候因為忙碌偷懶，沒有先寫當天的待辦清單，發現到的差別。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;補充我實際的做法&#34;&gt;補充：我實際的做法
&lt;/h2&gt;&lt;p&gt;事先準備：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在todoist上面，建立&lt;code&gt;top priority&lt;/code&gt;、&lt;code&gt;other priority&lt;/code&gt;兩個tag。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在todoist上面，建立兩個filter，
分別是&lt;code&gt;今天 &amp;amp; @top priority&lt;/code&gt;、&lt;code&gt;今天 &amp;amp; @other priority&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下來就是每天要做的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打開todoist，看看今天要做的事情、之前拖延下來的事情有哪些&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;從中找出最重要的事情，標上&lt;code&gt;top priority&lt;/code&gt;的tag&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再找出6件次重要的事情，標上&lt;code&gt;other priority&lt;/code&gt;的tag&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;開始做 &lt;code&gt;top priority&lt;/code&gt;的事情&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>朱騏覆盤直播心得</title>
        <link>https://coding.fnsne.com/posts/retrospective/</link>
        <pubDate>Sun, 15 Dec 2024 12:14:30 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/retrospective/</guid>
        <description>&lt;h1 id=&#34;朱騏覆盤直播心得&#34;&gt;朱騏覆盤直播心得
&lt;/h1&gt;&lt;p&gt;早期我覆盤的方式，都只是在察覺到哪邊做的不好，可能有更好的方法可以做的更好的時候，才會開始規劃、思考如何優化。所以PDCA的迴圈啟動的頻率是非常低的。&lt;/p&gt;
&lt;p&gt;後來在看了Ali Abdaal的影片後，知道了每日日記加上感謝、肯定，能讓人對於生活的滿足感增加，所以我才開始了每天晚上的日記，在日記上面列出以下三個問題的解答&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;感謝：感謝今天的什麼事情&lt;/li&gt;
&lt;li&gt;肯定：肯定今天做了什麼事情&lt;/li&gt;
&lt;li&gt;反省：今天有什麼事情是可以做的更好的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但時間一長，失去了一開始的那個勁之後，就會發現到這很難持續下去。
因為我每次回顧的時間都是晚上的時候，但是在回顧的時候，總是要花上20~30分鐘的時間，其中有絕大多數時間，都花在回想做了什麼事情。&lt;/p&gt;
&lt;p&gt;在看完這場直播後，才知道可以利用間歇式日記記錄，並且把它用在每天的回顧上面。
在這樣做之後，每日回顧時花費的時間，甚至可以被縮短到5~10分鐘，讓回顧的難度降低許多。&lt;/p&gt;
&lt;h2 id=&#34;間歇式日記&#34;&gt;間歇式日記
&lt;/h2&gt;&lt;p&gt;間歇式日記是Medium的CEO——&lt;a class=&#34;link&#34; href=&#34;https://coachtony.medium.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tony Stubblebin&lt;/a&gt;所提出來的一個筆記技巧。&lt;/p&gt;
&lt;p&gt;簡單來說，就是在每個工作段落之間，留一小段時間做以下三件事情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;記錄剛剛做了什麼&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;寫下腦中的想法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;稍微思考接下來可以做什麼，怎麼做。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，使用間歇式日記可以獲得以下三個好處：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;獲得一整天做了什麼事情的記錄&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在進入下個階段工作之前，把腦中的雜訊清空、放下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;雜訊可能會是：對於上個任務的焦慮、突然想到的idea、甚至突然浮現的不相干的想法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在下次開始這個工作的時候，已經有了第一步要做的事情了&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那麼，實際上該怎麼做呢？&lt;/p&gt;
&lt;p&gt;很簡單，只要記得在每個工作告一段落的時候（例如結束一個番茄鐘後，那個5分鐘的休息時間）
寫下以下的4個東西：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;時間戳記（我偏好記錄時間的開頭和結尾）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;剛剛完成了什麼&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;腦中浮現的想法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;覺得可以做的下一步&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這樣就完成了。&lt;/p&gt;
&lt;p&gt;把&lt;code&gt;腦中浮現的想法&lt;/code&gt;記錄下來，可以讓大腦對於前一個任務的焦慮清空、放下；
而寫下&lt;code&gt;覺得可以做的下一步&lt;/code&gt;，可以讓我們在下一次繼續推進的時候，
能夠馬上知道要做什麼，而更快的進入狀況。&lt;/p&gt;
&lt;p&gt;我的例子：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;09:00~09:34：整理&amp;amp;分析朱騏直播課的內容，還有我可以做哪些調整。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我覺得可以增加做的事情：
&lt;ul&gt;
&lt;li&gt;用間歇式日記記錄、並且用它來回答每日問題&lt;/li&gt;
&lt;li&gt;每週日安排一個時間來做覆盤-反思：每週反思&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;lt;朱騏的直播課上面，是如何使用間歇式日記的&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要是用到了間歇式日記的記錄過去的功能，來幫助自己回顧過去的一天。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ps&#34;&gt;P.S.
&lt;/h2&gt;&lt;p&gt;其實我以前在看了電腦玩物站長Esor介紹後，就開始有在工作的時候寫這個，
從workflowy轉換到notion，再到現在Heptabase上，都沒有間斷過。
只是我只有用在專案等級的項目而已，並沒有像朱騏一樣，記錄更多事情。
並且也沒有想到可以用在每日回顧上面。&lt;/p&gt;
&lt;p&gt;感覺好像打通了任督二脈一樣！&lt;/p&gt;
&lt;h2 id=&#34;ref&#34;&gt;ref
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://betterhumans.pub/replace-your-to-do-list-with-interstitial-journaling-to-increase-productivity-4e43109d15ef&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://betterhumans.pub/replace-your-to-do-list-with-interstitial-journaling-to-increase-productivity-4e43109d15ef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.projectup.net/article/view/id/16832&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.projectup.net/article/view/id/16832&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>The Power of Hand Writing</title>
        <link>https://coding.fnsne.com/posts/the-power-of-hand-writing/</link>
        <pubDate>Mon, 09 Dec 2024 21:18:19 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/the-power-of-hand-writing/</guid>
        <description>&lt;h1 id=&#34;手寫的力量&#34;&gt;手寫的力量
&lt;/h1&gt;&lt;p&gt;在上星期日（2024-12-08）我陷入了一個狀態。似乎是因為看到了太多的資訊，又打開了噗浪（我追蹤太多資訊了），
結果在晚上的時候，開始進入了恐慌狀態。在此時內心會一直在「不能，我不能再看下一篇了」、「再看一篇，只要再一篇….」的拉鋸狀態。&lt;/p&gt;
&lt;p&gt;在進入這個狀態後，整個人會變得非常的不舒服。但即使想要抽離也沒有那麼容易，必須要抽離好一段時間才能慢慢恢復。
但是即使想辦法抽離，只要稍微沒有注意，就會再被拉回去。我想著要抽離，先站起來動一動，
但也只是站起來很焦慮的來回踱步，然後又坐下來。最終是家人叫我去準備其他東西的時候，才成功有一小段暫時清醒的時間。&lt;/p&gt;
&lt;p&gt;在這個時候，我做了一個正確的決定&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;把筆電收起來&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;想當然，我馬上就開始繼續焦慮、渴望訊息。&lt;/p&gt;
&lt;p&gt;所以我拿出了一隻鋼筆、一疊紙，開始把心中的聲音寫出來、檢討今天怎麼失控成這樣的話也寫出來，寫著寫著，
開始越來越能理性的思考分析了，漸漸的，我感覺到我腦袋開始放鬆、有種大腦一直處於窒息狀態，
終於能呼吸到新鮮空氣。這是我這一次明顯感受到的。&lt;/p&gt;
&lt;p&gt;之前一直知道「寫出來」這個方法很有用，但我一直認為打字的和手寫出來的效果一樣，
但當我這次的時候，想要在heptabase上面用journal寫日記的方式來抽離，結果發現，打沒幾個字，心思就又被吸走去獲得更多的資訊了。&lt;/p&gt;
&lt;p&gt;我在想，會不會是因為書寫的速度比較慢，並且我在書寫的時候，其實會順便一邊書寫一邊思考下個字要怎麼寫怎麼放，
就是因為這樣，才能讓我退出過載的狀態的？&lt;/p&gt;
&lt;p&gt;好奇大家有沒有遇到這個資訊過載的狀態，還有是用什麼方法解決它的呢？&lt;/p&gt;
</description>
        </item>
        <item>
        <title>《上線時間管理術》讀後心得1</title>
        <link>https://coding.fnsne.com/posts/uptime-review-1/</link>
        <pubDate>Sun, 24 Nov 2024 22:12:38 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/uptime-review-1/</guid>
        <description>&lt;h1 id=&#34;上線時間管理術閱讀心得&#34;&gt;《上線時間管理術》閱讀心得
&lt;/h1&gt;&lt;p&gt;《上線時間管理術》的作者是一位專門為Google頭銜有總字的主管，協助規劃時間管理的人。
在書上有提到很多關於時間管理的方法，在我閱讀到第7課為止，給我最大啟發的是以下兩件事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;三大優先事項&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;威力時間和離鋒時間&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;三大優先事項&#34;&gt;三大優先事項
&lt;/h2&gt;&lt;p&gt;其實就是個人的包含生活、工作等所有面向，目前最優先的三大事項（領域）。例如可能目前公司缺人才，可能就會把招募設為其中一個最優先事項。&lt;/p&gt;
&lt;p&gt;三大優先事項並不是說，不能做其它事情，而是在所有重要的事情上面，再多加上三個最優先的事項。
因為這三個事項，對於比起其它重要事情，被推進、完成的話，對於自己的效益會是更高的。
也就是先把精力消耗在最重要的事情上。
另外，它最多只能有三個，如果要把其它事情加上來，就得要把某個優先事項移出三大優先事項，藉由這樣來避免過載，或者因為做太多事而都做的很慢。&lt;/p&gt;
&lt;p&gt;確定三大優先事項，在我認為最大的目的就是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作為一盞明燈，讓自己能夠把重要的事情再篩選一遍，把其它事情可以想辦法拒絕、委託出去。避免做太多事情而負荷不住、推進速度非常慢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;對我來說，在確定了當前的三大優先事項後，我把todoist上原本規劃要做的待辦清單，清掉了1/3，讓他更貼近我目前想要專注的三大領域上。&lt;/p&gt;
&lt;h2 id=&#34;威力時間&#34;&gt;威力時間
&lt;/h2&gt;&lt;p&gt;所謂的威力時間，是每個人在一整天裡面，會有個非常高效、專注、心流的2~3個小時。
我們就是要在這個時間裡面，儘量想辦法把三大優先事項給安排在這裡面。也就是把最精華的時間花在刀口上，用來產出最大的成果。&lt;/p&gt;
&lt;p&gt;就我的感受，在週六下午1~4點的時候，我閱讀會變得很專注，而且不太會被外界打斷，閱讀時的思緒也會變得很清楚。最重要的是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不會閱讀1、2頁就感到疲乏不想閱讀了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其實我睡前會藉由閱讀書，來讓我變得想睡覺。
我在睡前常常只要看個1、2頁就能讓我感到疲倦不想看書了。
但在下午1~4點的時候，我卻可以一直看下去。明明同一本書在睡前看就很容易不想看了。&lt;/p&gt;
&lt;h2 id=&#34;離峰時間&#34;&gt;離峰時間
&lt;/h2&gt;&lt;p&gt;離峰時間，指的是很容易發散，不能專注、精神最不濟的時間。在這邊作者定義的是在威力時間之外的其它時間。&lt;/p&gt;
&lt;p&gt;在這個時間適合做一些比較低耗能的事情，&lt;strong&gt;而且還很適合做一些發散、需要創意的事情&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;這週日，我就試著使用這個方式，在早上的時候，處理一些思考的議題，結果發現，真的差好多。&lt;/p&gt;
&lt;p&gt;我在這個時間思考議題，會變得非常的文思泉湧。很快的就能列出好幾個後續可能可以的做法，這和平常我在下午思考議題的時候差的非常多。&lt;/p&gt;
&lt;p&gt;以前我在下午的時候思考議題，通常容易卡個1個小時甚至更久，
但在上午，我居然只要10分鐘左右。
（當然任務的量級還是不太一樣，但感覺上，在上午我會覺得遊刃有餘，在下午卻會覺得非常的艱困）&lt;/p&gt;
&lt;p&gt;結果這週末，光是知道了威力時間和離峰時間，並用它來選擇要做的事情，就讓我原本在週末的產值增加了3倍。&lt;/p&gt;
&lt;p&gt;而且因為知道威力時間，也讓我更加寶貝這段時間，讓我下意識的減少在這個時候做低效益的瑣事。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;以上就是我目前閱讀到第7課為止，最大的收穫：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用三大優先事項來讓我們把待辦清單儘量只留下最重要的事情。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用威力時間做最重要最耗能的事情&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用離峰時間做要發散、創意的事情&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;reference
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://r10.to/hNypq2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;上線時間管理術&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Grafana Alloy</title>
        <link>https://coding.fnsne.com/posts/grafana-alloy/</link>
        <pubDate>Wed, 20 Nov 2024 21:19:18 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/grafana-alloy/</guid>
        <description>&lt;h1 id=&#34;grafana-alloy&#34;&gt;Grafana Alloy
&lt;/h1&gt;&lt;p&gt;原本我一開始是考慮要先研究怎麼使用grafana promtail把Log傳到Loki的，
但我在Promtail的文件上面看到，promtail 的功能已經完整了，未來新的功能，只會被加到Grafana Alloy上面。&lt;/p&gt;
&lt;p&gt;在這邊我才知道，Alloy應該是比較新的，並且擁有更多的功能。Alloy除了可以偵測logs，還提供把一些系統指標抓取起來的功能。
所以最後想說既然要學，那我就先來學Alloy好了。&lt;/p&gt;
&lt;h2 id=&#34;components&#34;&gt;Components
&lt;/h2&gt;&lt;p&gt;Alloy的功能是圍繞在三種component上，運用以下三種component來做到把資料收集、處理、寫出去：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;collector: 把資料收集起來&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;transformer: 對資料做額外處理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;writer: 把資料寫出去&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：我們可以利用loki.source.file 來偵測log檔案的內容變動，並收集起來，傳遞給loki.writer，把資料寫到Loki server上。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;loki.source.file &amp;#34;foo_file&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  targets    = [{__path__ = &amp;#34;/tmp/foo.txt&amp;#34;}]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  forward_to = [loki.write.local.receiver]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;loki.write &amp;#34;local&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  endpoint {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    url = &amp;#34;loki:3100/loki/api/v1/push&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;collector&#34;&gt;Collector
&lt;/h3&gt;&lt;p&gt;Alloy提供不同的Collector，讓我們能收集不同的logs。例如可以從檔案、HTTP、gRPC、message queue收集logs。&lt;/p&gt;
&lt;h3 id=&#34;transformer&#34;&gt;Transformer
&lt;/h3&gt;&lt;p&gt;Alloy提供不同的transformer，來讓我們對於collector收集到的logs做額外的處理，例如加上額外的metadata、過濾某些logs、壓縮整理logs，讓他更好傳輸到Loki上。&lt;/p&gt;
&lt;h3 id=&#34;writer&#34;&gt;Writer
&lt;/h3&gt;&lt;p&gt;就是負責把收集好的logs送出去的元件，Grafana Alloy除了提供寫到Loki之外，也有提供不少寫到其它服務的Writer，例如Kafaka。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;這邊是Alloy支援的Component 列表： &lt;a class=&#34;link&#34; href=&#34;https://grafana.com/docs/alloy/latest/reference/components/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;components list&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;介紹完畢了，接下來就是開始安裝了&lt;/p&gt;
&lt;h2 id=&#34;安裝&#34;&gt;安裝
&lt;/h2&gt;&lt;p&gt;我是直接照著官網上面的做法，在macOS上面使用homebrew來安裝的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先，先把grafana的tap加到我的home brew上&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew tap grafana/grafana
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;再來就是使用home brew來安裝了&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install grafana/grafana/alloy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這邊要注意的是，Alloy是一個背景作業的程式，他會一直執行監控要監控的目標。但因為我只是要在需要的時候打開，所以我會在需要使用的時候才打開，平常的時候會關掉它。&lt;/p&gt;
&lt;p&gt;打開的指令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew services start alloy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;關掉的指令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew services stop alloy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;設定&#34;&gt;設定
&lt;/h2&gt;&lt;p&gt;接下來就要進入到重要關頭了，也就是設定Alloy的pipeline怎麼接。這個設定要寫在&lt;code&gt;config.alloy&lt;/code&gt;這個檔案裡面。&lt;/p&gt;
&lt;p&gt;不同安裝方式的&lt;code&gt;config.alloy&lt;/code&gt;位置都不太一樣，像是home brew 安裝的Alloy會被放在&lt;code&gt;/opt/homebrew/etc/alloy/config.alloy&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我們可以在這個設定裡面，利用components，來組出我們希望Alloy執行的pipeline。&lt;/p&gt;
&lt;p&gt;例如我們可以讓Alloy監控 /tmp/foo.txt 當它的內容有變更的時候，就把記錄寫到Loki上。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;loki.source.file &amp;#34;foo_file&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  targets    = [{__path__ = &amp;#34;/tmp/foo.txt&amp;#34;}]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  forward_to = [loki.write.local.receiver]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;loki.write &amp;#34;local&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  endpoint {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    url = &amp;#34;loki:3100/loki/api/v1/push&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這邊要注意的地方是，對於Alloy的每個元件，我們都可以命名，並且會擁有一個完整的名稱。&lt;/p&gt;
&lt;p&gt;例如loki.write &amp;ldquo;local&amp;rdquo;
會命名一個loki.write的component叫做local。
它會有個完整名稱叫做 loki.write.local ，這個名稱可以用來在別的component上面使用&lt;/p&gt;
&lt;p&gt;（但只有被設計為Export的欄位可以被使用。）&lt;/p&gt;
&lt;p&gt;以上面的例子來說就是&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;loki.source.file.foo_file藉由foward_to來指定，指定說要把收集到的資料，送到loki.wrti.local.receiver這個接口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;loki.write.local會把receiver接口收到的資料，送到loki:3100/loki/api/v1/push上面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;接下來，設定完&lt;code&gt;config.alloy&lt;/code&gt;後，我們就可以讓Alloy來重新載入設定了&lt;/p&gt;
&lt;h2 id=&#34;用debug-web來重新載入設定&#34;&gt;用Debug Web來重新載入設定
&lt;/h2&gt;&lt;p&gt;首先連到Alloy的debug web界面：&lt;code&gt;http://localhost:12345&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;要注意，它預設只能在架設Alloy的機器上，使用localhost來存取到，避免把secret的資料從debug資訊中暴露出去。&lt;/p&gt;
&lt;p&gt;重新讀取設定，只要request這個頁面即可 &lt;code&gt;http://localhost:12345/-/reload&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;成功重新讀取設定，會顯示reloaded的訊息。&lt;/p&gt;
&lt;p&gt;如果有遇到config有寫錯，可以在存取reload頁面的時候，看到解析失敗的訊息。&lt;/p&gt;
&lt;h2 id=&#34;如何確定有正確運作&#34;&gt;如何確定有正確運作
&lt;/h2&gt;&lt;p&gt;可以到Alloy的log去檢查&lt;/p&gt;
&lt;p&gt;以macOS homebrew安裝的Alloy的log，會被放在 /opt/homebrew/var/log 裡面。&lt;/p&gt;
&lt;p&gt;可以在裡面查看&lt;code&gt;alloy.err.log&lt;/code&gt; 、&lt;code&gt;alloy.log&lt;/code&gt; 來看看是否有正常收集資料、處理資料、傳輸資料到Loki（或目的地）去。&lt;/p&gt;
&lt;h2 id=&#34;ref&#34;&gt;ref
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://grafana.com/docs/loki/latest/send-data/alloy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://grafana.com/docs/loki/latest/send-data/alloy/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://grafana.com/docs/alloy/latest/tutorials/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://grafana.com/docs/alloy/latest/tutorials/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Grafana Loki</title>
        <link>https://coding.fnsne.com/posts/grafana-loki/</link>
        <pubDate>Tue, 19 Nov 2024 21:19:07 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/grafana-loki/</guid>
        <description>&lt;h1 id=&#34;grafana-loki&#34;&gt;Grafana Loki
&lt;/h1&gt;&lt;p&gt;最近因為覺得log實在是不怎麼好閱讀、查找問題，所以開始來研究Grafana，看看怎麼讓他來分析和query logs。&lt;/p&gt;
&lt;p&gt;先分享一下關於logs是如何進入到Grafana的Log管理服務Grafana Loki的&lt;/p&gt;
&lt;p&gt;下圖是Grafana官網的圖，說明了Log彙整簡單的流程
&lt;img src=&#34;https://coding.fnsne.com/posts/grafana-loki/logs-loki-diagram.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Grafana Loki&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用Promotail/Alloy在各端機器上收集logs，然後送到Grafana Loki上面處理和儲存起來。&lt;/li&gt;
&lt;li&gt;然後使用Grafana的UI界面、LogcLi來分析、探索Loki上面的logs。&lt;/li&gt;
&lt;li&gt;利用AlertManager來在一些不正常情況發生時，進行通知。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這就是Grafana Loki的簡單流程，接下來我會繼續往後研究，看看要怎麼把logs整合到Grafana Loki上面。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;相關文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://coding.fnsne.com/posts/grafana-alloy/&#34; &gt;Grafana Alloy：用來收集各種logs和系統指標的工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Debug的小技巧:假設</title>
        <link>https://coding.fnsne.com/posts/debug-tricks-suppose/</link>
        <pubDate>Mon, 18 Nov 2024 21:43:53 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/debug-tricks-suppose/</guid>
        <description>&lt;h1 id=&#34;排查問題的小技巧假設&#34;&gt;排查問題的小技巧：假設
&lt;/h1&gt;&lt;p&gt;跟大家分享一下最近發現到，在debug時的一個小技巧&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;先假設原因&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這個做法，其實是在我閱讀&lt;a class=&#34;link&#34; href=&#34;https://r10.to/hNdMd5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《雜訊時代的高效資料整理術：精準掌握二成黃金資訊的39個法則》&lt;/a&gt;
關於收集資訊的章節後，在工作上debug時突然靈機一動，亂套用看看&lt;/p&gt;
&lt;p&gt;結果發現還真的蠻好用的。&lt;/p&gt;
&lt;p&gt;這個做法其實很簡單，就是&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;初步瞭解狀況&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假設一個發生的原因&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以假設的原因來設計重現步驟（比較小的部分，可以順便寫對應的測試來跑）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;嘗試看看能不能重現同樣的問題，如果不行就回到第二步，再改變假設&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;就這樣!&lt;/p&gt;
&lt;p&gt;為什麼我會覺得這個方法很好用呢？&lt;/p&gt;
&lt;p&gt;因為我很常會在前面的階段花上過多的時間來分析和思考，導致很晚才開始碰code。&lt;/p&gt;
&lt;p&gt;但通常真正的問題得要獲得一些更內部的資訊才有可能察覺到，
而這些資訊，通常得要在實際嘗試後才有可能會得到。&lt;/p&gt;
&lt;p&gt;也就是說，在這樣快速假設→驗證的流程下，能夠讓我更快速的獲得比較深入的相關資訊，有了更多的資訊，就更有機會能分析找到問題的根源在哪裡。&lt;/p&gt;
&lt;p&gt;所以在套用了這個方法後，我debug的速度加快了不少，至少在找到原因的步驟，快了至少一倍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;P.S. 這樣就知道我以前多會在前面思考的部分糾結了……&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>解決拖延症的方法</title>
        <link>https://coding.fnsne.com/posts/solve-procrastination/</link>
        <pubDate>Fri, 15 Nov 2024 00:27:17 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/solve-procrastination/</guid>
        <description>&lt;h1 id=&#34;解決拖延症的方法&#34;&gt;解決拖延症的方法
&lt;/h1&gt;&lt;p&gt;拖延症，是我們大部分的人都會遇到的問題。雖然之前有看到一種說法，「會拖延，只是因為對自己來說還不急，所以才會一直的拖延下去」。
但我常常發現，即使是對於我來說很重要的事情，就是不知道為什麼，即使已經切分好小小的行動了，還是無法下定決心來做。&lt;/p&gt;
&lt;p&gt;但是，在今天，我找到了一個方法，那就是：切成多個步驟，每個步驟只能用5分鐘，用多次迭代出結果出來。&lt;/p&gt;
&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://r10.to/hknBvF&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《雜訊時代的高效資料整理術：精準掌握二成黃金資訊的39個法則》&lt;/a&gt;裡面有提到作者如何快速的做到收集資料、整理、輸出這三件事，&lt;/p&gt;
&lt;p&gt;那就是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;就是每件事只給一個番茄時間（25分鐘），一旦超過就要強制進入下一個階段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是25分鐘收集資料，25分鐘整理資料，25分鐘進行輸出。&lt;/p&gt;
&lt;p&gt;這樣做可以藉由限制時間來避免在每個階段的拖延。&lt;/p&gt;
&lt;p&gt;對我來說，番茄鐘算是很熟悉的東西，白天工作的時候常常會使用它來讓我保持最高的專注力。
但到了晚上，往往已經動力已經足以驅動我花一個番茄時間做事了。&lt;/p&gt;
&lt;p&gt;在這個時候，我回想到&lt;a class=&#34;link&#34; href=&#34;https://r10.to/h5K9jB&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《專注力協定》&lt;/a&gt;裡面提到的10分鐘法則：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;「什麼都不要考慮，先做10分鐘再說」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在這樣一來一回的調整後，就得到了一個適合我的方法了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;把要做的事情分成多個步驟，每個步驟都給極短的時間，時間到就要進入下一個步驟。但可以重複好幾輪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這個做法極大的減少心理的阻力：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;因為知道這輪沒有做好，還可以用下一輪來做，讓自己接受產出不完整的結果，所以阻力會比較小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因為每個步驟的時間只有5分鐘，所以不會有任何思緒在胡思亂想。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因為只有5分鐘，所以開始嘗試的阻力也會跟著小起來。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;結果套用它後，原本已經拖延了好幾天、遲遲無法有所進展的事情，今天終於又開始有所推進了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;雖然之前在看&lt;a class=&#34;link&#34; href=&#34;https://r10.to/h5K9jB&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《專注力協定》&lt;/a&gt;後，就開始嘗試使用timeboxing做事情，&lt;/p&gt;
&lt;p&gt;但後來發現timebox只是減少了分心去思考要不要做別的事情而已。
可是對於做timebox上定好的事情的阻力，還是一樣大。所以有時候就會變成，在定好的時間裡面發呆……&lt;/p&gt;
&lt;p&gt;現在加上了這個方法，應該能讓我更能掌握我的時間，做更多我想要做的事情。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>我整理電子書Highlight的方法：萃取階段</title>
        <link>https://coding.fnsne.com/posts/extract-highlight/</link>
        <pubDate>Thu, 14 Nov 2024 00:49:22 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/extract-highlight/</guid>
        <description>&lt;h1 id=&#34;我整理電子書highlight的方法萃取階段&#34;&gt;我整理電子書highlight的方法：萃取階段
&lt;/h1&gt;&lt;p&gt;接續[上一篇]/posts/category-highlights/的內容
其實到了這個階段，就只剩下很簡單的行為了：就是利用碎片時間慢慢整理之前彙整好的知識點卡片了。&lt;/p&gt;
&lt;p&gt;步驟：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;篩選出還沒有消化好的知識點卡片&lt;/li&gt;
&lt;li&gt;閱讀和整理知識點卡片&lt;/li&gt;
&lt;li&gt;如果知識點卡片還可以延伸出其它的知識，那就產出來&lt;/li&gt;
&lt;li&gt;把產生的知識點卡片給鏈接到&lt;code&gt;主題分類&lt;/code&gt;上&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;詳細流程：&lt;/p&gt;
&lt;h2 id=&#34;步驟1-篩選出還沒有消化好的知識點卡片&#34;&gt;步驟1: 篩選出還沒有消化好的知識點卡片
&lt;/h2&gt;&lt;p&gt;要做到這點其實很簡單，只要再多加上一個&lt;code&gt;消化完成&lt;/code&gt;的tag來區分是否消化完成。就可以在Card Library上設定篩選器。&lt;/p&gt;
&lt;p&gt;也就是設定有&lt;code&gt;reference&lt;/code&gt; tag，但不要有&lt;code&gt;消化完成&lt;/code&gt;tag的卡片就可以了。&lt;/p&gt;
&lt;p&gt;設定如下圖：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://coding.fnsne.com/posts/extract-highlight/filter-setting.png&#34;
	width=&#34;1176&#34;
	height=&#34;354&#34;
	srcset=&#34;https://coding.fnsne.com/posts/extract-highlight/filter-setting_hube9fec22f1a96163f7f1fa65b9119be3_60662_480x0_resize_box_3.png 480w, https://coding.fnsne.com/posts/extract-highlight/filter-setting_hube9fec22f1a96163f7f1fa65b9119be3_60662_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;篩選器設定&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;332&#34;
		data-flex-basis=&#34;797px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;步驟2-閱讀和整理知識點卡片&#34;&gt;步驟2: 閱讀和整理知識點卡片
&lt;/h2&gt;&lt;p&gt;因為知識點卡片上面通常已經彙整了不少相關的資訊在上面了，在這個時候開始整理大多情況都會變得很快速順暢。&lt;/p&gt;
&lt;p&gt;可以從下圖看到，此時內容已經很充足，能讓我快速整理出通順內容了。（highlight來源：&lt;a class=&#34;link&#34; href=&#34;https://r10.to/hkt6Zc&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;雜訊時代的高效資料整理術&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://coding.fnsne.com/posts/extract-highlight/knowledge-rough-card.png&#34;
	width=&#34;1736&#34;
	height=&#34;1580&#34;
	srcset=&#34;https://coding.fnsne.com/posts/extract-highlight/knowledge-rough-card_hu914b54b9f008ec602a694be050db91a1_867499_480x0_resize_box_3.png 480w, https://coding.fnsne.com/posts/extract-highlight/knowledge-rough-card_hu914b54b9f008ec602a694be050db91a1_867499_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;知識點卡片&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;109&#34;
		data-flex-basis=&#34;263px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;步驟3-如果知識點卡片還可以延伸出其它的知識那就產出來&#34;&gt;步驟3: 如果知識點卡片還可以延伸出其它的知識，那就產出來
&lt;/h2&gt;&lt;p&gt;這一步，只有在發現卡片中其實還可以再次彙整出不同的知識點卡片時，才需要做。&lt;/p&gt;
&lt;p&gt;做法和[上一篇]/posts/category-highlights/的時候一樣，
就是從這張知識點卡片再分出不同的子知識點卡片出來。&lt;/p&gt;
&lt;h2 id=&#34;步驟4-把整理完的知識點卡片的鏈接加到主題分類上&#34;&gt;步驟4: 把整理完的知識點卡片的鏈接加到主題分類上
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;主題分類&lt;/code&gt;：是我從瓦基的卡片盒筆記實戰課裡面學到的一個很重要的東西，它上面列出我所在乎的所有主題。&lt;/p&gt;
&lt;p&gt;它是我的第二大腦最一開始的進入點。&lt;/p&gt;
&lt;p&gt;每當我想要找相關的主題內容的時候，可以從主題分類開始進入。讓我一邊閱讀尋找我要的知識，一邊把相關的知識給再看到一次。&lt;/p&gt;
&lt;p&gt;因為有主題分類的存在，讓我可以把我學到的知識點，和我至今所學的知識整理在一起，而不是依照書名、書目錄架構、課程的順序來排序&lt;/p&gt;
&lt;p&gt;有了主題分類，等於我能夠把所有我所學到的知識、想出來的點子，給連結起來。
即使未來忘記了，也還是可以從主題分類開始順藤摸瓜，慢慢找到我要的知識。&lt;/p&gt;
&lt;p&gt;而不會變成忘記關鍵字，就很有永遠找不到那張卡片了。&lt;/p&gt;
&lt;p&gt;放到&lt;code&gt;主題分類&lt;/code&gt;的流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Ctrl+O&lt;/code&gt; 全局搜尋&lt;code&gt;我的主題分類&lt;/code&gt;，來找到主題分類的卡片&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://coding.fnsne.com/posts/extract-highlight/search-topic.png&#34;
	width=&#34;834&#34;
	height=&#34;480&#34;
	srcset=&#34;https://coding.fnsne.com/posts/extract-highlight/search-topic_hub70d470acbbabf0bb544acfeab3d2af8_56982_480x0_resize_box_3.png 480w, https://coding.fnsne.com/posts/extract-highlight/search-topic_hub70d470acbbabf0bb544acfeab3d2af8_56982_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;全局搜尋&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;173&#34;
		data-flex-basis=&#34;417px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;找到和這個知識點卡片相關的主題，一層層的往下找，
直到找到有類似的知識點卡片鏈接，在它旁邊加上這張知識點卡片的鏈接。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如下圖這是我的主題分類 → 生產力&amp;amp;時間管理主題的部分內容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://coding.fnsne.com/posts/extract-highlight/topic-category-sample.png&#34;
	width=&#34;1750&#34;
	height=&#34;1430&#34;
	srcset=&#34;https://coding.fnsne.com/posts/extract-highlight/topic-category-sample_hu346b76393ca7964a24a6e529841be2b8_357647_480x0_resize_box_3.png 480w, https://coding.fnsne.com/posts/extract-highlight/topic-category-sample_hu346b76393ca7964a24a6e529841be2b8_357647_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;主題分類&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;122&#34;
		data-flex-basis=&#34;293px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>我整理電子書Highlight的方法：彙整階段</title>
        <link>https://coding.fnsne.com/posts/category-highlights/</link>
        <pubDate>Mon, 11 Nov 2024 00:23:33 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/category-highlights/</guid>
        <description>&lt;h2 id=&#34;我整理電子書highlight的方法彙整階段&#34;&gt;我整理電子書highlight的方法：彙整階段
&lt;/h2&gt;&lt;p&gt;接續&lt;a class=&#34;link&#34; href=&#34;https://coding.fnsne.com/posts/e-book-is-an-amazing-invention/&#34; &gt;上一篇&lt;/a&gt;的內容&lt;/p&gt;
&lt;p&gt;前面我有提到我使用readwise把highlight給同步到heptabase（筆記軟體）上面，所以當我標記完，highlight就會自動到heptabase上面了。&lt;/p&gt;
&lt;p&gt;接下來就是整理階段，我把整理階段分成兩個階段，這篇文章會著重在第一階段，彙整。&lt;/p&gt;
&lt;h3 id=&#34;彙整&#34;&gt;彙整
&lt;/h3&gt;&lt;p&gt;簡單來說就是利用whiteboard和section功能，把感覺有相關概念的卡片放在附近，然後用section群組起來。最後再連結到一個萃取出來的卡片上面。&lt;/p&gt;
&lt;p&gt;在這個階段，我會在heptabase上面新增一個whiteboard，然後把它pin到左側的tab上。我是使用閱讀資料夾來分類的用來放置我還沒有整理完的書的whiteboard&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://coding.fnsne.com/posts/category-highlights/heptabase-tabs.png&#34;
	width=&#34;530&#34;
	height=&#34;378&#34;
	srcset=&#34;https://coding.fnsne.com/posts/category-highlights/heptabase-tabs_hu3b5ab001e6b7c43c36b681a8d32997b3_37656_480x0_resize_box_3.png 480w, https://coding.fnsne.com/posts/category-highlights/heptabase-tabs_hu3b5ab001e6b7c43c36b681a8d32997b3_37656_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我heptabase左側的tabs&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;336px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;接下來我會再把彙整分成兩步驟：&lt;code&gt;把類似的highlight放在附近&lt;/code&gt;、&lt;code&gt;彙整出筆記粗稿&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;步驟1-把類似的highlight放在附近&#34;&gt;步驟1: 把類似的highlight放在附近
&lt;/h4&gt;&lt;p&gt;在這個時候，我會打開kobo app，依照書本上的順序，重新閱讀highlights，並把我覺得重要的highlights放到whiteboard上面，把覺得類似的highlight放在一堆，然後用section群組起來。&lt;/p&gt;
&lt;p&gt;詳細的流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一頁一頁的看kobo app上劃線的highlights，一邊思考這是否重要，重要的話，在heptbase上，搜尋對應的關鍵字，找到heptabase上對應的highlight卡片。把它移到whtieboard上面，其它和這張highlight相關的卡片的附近。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;雖然有時候kobo送到readwise的順序怪怪的，但還是可以藉由使用highlight的搜尋功能，搜尋highlight的前幾個字。來做到以實際書本上面的highlight順序來截取highlights。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;發現某些相關的highlight有個可以總結他們概念的大標題時，把他們放在一起，然後使用section功能群組在一起。（多選卡片→Ctrl + G）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(這是我閱讀&lt;a class=&#34;link&#34; href=&#34;https://r10.to/hkN4Lh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《專注力協定》&lt;/a&gt;的時候做的whiteboard。)
&lt;img src=&#34;https://coding.fnsne.com/posts/category-highlights/group-by-section.png&#34;
	width=&#34;1584&#34;
	height=&#34;1282&#34;
	srcset=&#34;https://coding.fnsne.com/posts/category-highlights/group-by-section_huecc40670c9dae1b3bbef18b6f459c23a_305939_480x0_resize_box_3.png 480w, https://coding.fnsne.com/posts/category-highlights/group-by-section_huecc40670c9dae1b3bbef18b6f459c23a_305939_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;範例圖&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;123&#34;
		data-flex-basis=&#34;296px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;步驟2-彙整出筆記粗稿&#34;&gt;步驟2: 彙整出筆記粗稿
&lt;/h4&gt;&lt;p&gt;在這個時候，重新以section為單位來閱讀highlights並參考section標題，彙總出筆記粗稿。&lt;/p&gt;
&lt;p&gt;詳細流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打開whiteboard的右邊側欄，點Table Of Content&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://coding.fnsne.com/posts/category-highlights/whiteboard-table-of-content.png&#34;
	width=&#34;2506&#34;
	height=&#34;1264&#34;
	srcset=&#34;https://coding.fnsne.com/posts/category-highlights/whiteboard-table-of-content_hu4b8f3469276b36b52cb34fdb905dbdee_588919_480x0_resize_box_3.png 480w, https://coding.fnsne.com/posts/category-highlights/whiteboard-table-of-content_hu4b8f3469276b36b52cb34fdb905dbdee_588919_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;whiteboard-table-of-content&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;475px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;使用Table Of Content跳到各個section上，重新閱讀highlight，思考是否能彙整出什麼知識點，這個知識點就是筆記粗稿的標題&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果有，就在section旁邊建立以該知識點為標題的卡片，並用copy content把相關的highlight內容貼到知識點卡片上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回到這些highlight上，在筆記的部分，連結這個知識點卡片。這樣未來就能使用卡片下方的backlink，來找到當初是由哪些highlight，來得到這個的知識點卡片的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;到了這一步，畫面應該會長這樣&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://coding.fnsne.com/posts/category-highlights/extract-knowledge-draft.png&#34;
	width=&#34;1048&#34;
	height=&#34;1060&#34;
	srcset=&#34;https://coding.fnsne.com/posts/category-highlights/extract-knowledge-draft_hu66667b5a6af6fdab3a95da0adb3e3775_279590_480x0_resize_box_3.png 480w, https://coding.fnsne.com/posts/category-highlights/extract-knowledge-draft_hu66667b5a6af6fdab3a95da0adb3e3775_279590_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;彙整出來的筆記粗稿&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;98&#34;
		data-flex-basis=&#34;237px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;在知識點卡片上，加上屬於知識點卡片的tag，我是使用reference。藉由這個讓我下一階段時，能只篩選出知識點卡片。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在這樣整理之後，我就可以把各種知識切成一塊塊小組，然後再下一階段的時候，利用碎片時間萃取了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://coding.fnsne.com/posts/category-highlights/whiteboard-example.png&#34;
	width=&#34;2326&#34;
	height=&#34;1362&#34;
	srcset=&#34;https://coding.fnsne.com/posts/category-highlights/whiteboard-example_hu866c797137e3631e2eb4b717172e1227_576673_480x0_resize_box_3.png 480w, https://coding.fnsne.com/posts/category-highlights/whiteboard-example_hu866c797137e3631e2eb4b717172e1227_576673_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;白板上的知識點卡片&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;409px&#34;
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;備註&#34;&gt;備註
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;步驟2可以在任何時候做，可以在剛圈出一個section的時候馬上做，也可以等步驟3把整本書整理過之後，再來做。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在上一篇文章提到的問題：Kobo即使是電子書閱讀器，有時候highlight也會斷掉。在這個做法下不會有問題，因為我在步驟2的時候，會一邊打開kobo app放在旁邊作為索引，用搜尋的方式在heptabase上查找highlights。所以即使我沒有讓一整段highlight在一起，而是切成好幾段標記，也還是可以找到應該要連在一起的highlights。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>電子書真的是劃時代的發明</title>
        <link>https://coding.fnsne.com/posts/e-book-is-an-amazing-invention/</link>
        <pubDate>Fri, 08 Nov 2024 22:41:41 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/e-book-is-an-amazing-invention/</guid>
        <description>&lt;h1 id=&#34;我覺得電子書真的是劃時代的發明&#34;&gt;我覺得電子書真的是劃時代的發明
&lt;/h1&gt;&lt;p&gt;接下來幾天，我會分享我最近發現到，很好閱讀電子書的方式，今天先來分享閱讀電子書的好處。&lt;/p&gt;
&lt;p&gt;電子書的highlight功能真的是劃時代的設計，因為現今大部分的電子書都有提供把highlights給匯出的功能。&lt;/p&gt;
&lt;p&gt;highlight是什麼？其實就是像在紙本書籍上，拿起熒光筆把重點畫起來。
但重點是，電子書是數位的，所以能夠把highlight給整理成筆記的粗稿，光是這個流程就能讓閱讀學習的效率變得飛快。&lt;/p&gt;
&lt;p&gt;也就是說：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我們在閱讀的時候只需要把覺得有道理、不懂的名詞解釋、新的流程等文字，劃線起來，就能繼續往後閱讀。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不會有糾結要不要寫筆記，也不會因為寫筆記而導致閱讀的注意力被中斷掉。因為我們都有把重點給畫下來了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;電子書的劃線功能讓我們能分割閱讀和筆記這兩件事情。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下來來說明一下我使用過的電子書：kindle、kobo、博客來的電子書。還有後來為何我選擇kobo&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;博客來電子書&#34;&gt;博客來電子書
&lt;/h2&gt;&lt;p&gt;它的highlight匯出功能我記得只能一個個highlight匯出，所以在我知道highlight這個超級好用的功能之後，我就放棄這個平臺了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;kindle&#34;&gt;Kindle
&lt;/h2&gt;&lt;p&gt;它的使用體驗是最好的，手機上的電子書閱讀器app，劃線功能非常的好操作，即時會需要跨頁highlight，使用起來也非常的順暢，並且不會有畫錯的問題發生。
而highlight的匯出能一次匯出來、也可以使用Readwise同步到筆記app上。缺點就是highlight有限制字數，不能超過該本書的10%。還有中文書的價格都偏高。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;kobo&#34;&gt;Kobo
&lt;/h2&gt;&lt;p&gt;建議一定要買電子書閱讀器來使用，&lt;strong&gt;因為它的app畫highlight功能不支援跨頁。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所以使用手機版app就別想要做highlight了。
而且手機版還額外有個bug，常常選取了一段話，最終標記出來的段落有時候會變成中間的幾個字，而不是一開始選取的字。&lt;/p&gt;
&lt;p&gt;因此如果要使用app的話，只會建議使用電腦版kobo app，因為版面比較足夠，而且劃線不會有手機版的亂截取bug。
但即使版面較大，還是有機會會遇到需要跨頁截取的情況，這個時候，就只能一直切換字體大小，直到想要截取的畫面在同一個版面上。&lt;/p&gt;
&lt;p&gt;再來就是kobo電子書的價格，每週都會寄當週每天特價99的書籍，
而且常常會有&lt;code&gt;週末閱讀好時光&lt;/code&gt;，也就是在週末的時候，訂單超過一定價格，會送111點點數，在kobo裡面，1點點數等於1元，所以就能買更多書了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;這點真的是非常的香。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再來說說kobo出的電子書閱讀器，使用體驗就是中規中矩了。但它劃線支援跨頁，雖然有時候遇到特殊的排版時，例如列點之類的，就有可能會中間被斷掉。
不過因為我後續還會打開app在旁邊，然後在筆記本上整理，所以即使highlight是分段，而不是畫一整段，也沒有什麼問題。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;最後再說一次各家電子書的優缺點&#34;&gt;最後再說一次各家電子書的優缺點
&lt;/h2&gt;&lt;p&gt;博客來&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺點：highlight匯出得要一個個highlight慢慢匯出，很麻煩&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;kindle&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;缺點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;highlight有限制不能超過書字數的10%、書本價格偏貴。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;優點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用者體驗最好，不論是app還是kindle閱讀器，劃線畫到哪就真的畫到哪&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支援Readwise同步highlight&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;kobo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;缺點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;電腦app和手機app劃線不支援跨頁&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;手機app常常會斷字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;電子書閱讀器劃線偶爾會抽風。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;優點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;電子書常常會有優惠價99元&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常常就會有週末優惠，買書超過指定金額會加碼送購書點數。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支援Readwise同步highlight&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;雖然kindle的使用體驗最好，但最後我還是選擇了kobo，因為價格實在是太香了，並且highlight沒有限制字數。&lt;/p&gt;
&lt;p&gt;順帶一題，我用readwise自動把highlight給匯入到我的筆記軟體，heptabase。&lt;/p&gt;
&lt;p&gt;下篇文章再來分享如何整理highlight。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Asynchronous Request</title>
        <link>https://coding.fnsne.com/posts/asynchronous-request/</link>
        <pubDate>Thu, 07 Nov 2024 20:59:16 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/asynchronous-request/</guid>
        <description>&lt;h1 id=&#34;關於asynchronous-request&#34;&gt;關於Asynchronous Request
&lt;/h1&gt;&lt;p&gt;Asynchronous Request（非同步請求），就是讓server收到請求後，馬上回應使用者有接收到了，但結果會等到執行完後再通知使用者。&lt;/p&gt;
&lt;p&gt;就像寄信一樣，寄出後我們就不用一直在郵局等，等到信件寄到目的地後，才能離開郵局。我們只要做了寄信的動作，就可以離開郵局做其它事情，郵局自然會把信件送達到目的地。
非同步請求也是這樣，在發出request後，server在收到請求後，就會把工作交由背景執行的worker進行運算，並在此時就告知使用者，讓使用者知道server已經收到要求了。&lt;/p&gt;
&lt;p&gt;所以使用者不會感覺到服務被卡住。&lt;/p&gt;
&lt;p&gt;最近我就有切身體驗到使用非同步請求對使用者體驗有著巨大的提升。&lt;/p&gt;
&lt;p&gt;那就是7-11賣貨便&lt;/p&gt;
&lt;p&gt;7-11賣貨便其實每逢節慶，就會開始發放優惠券、折價券，但很常見的發放時間都是在半夜12點的時候開始，因此每到那個時候整個賣貨便服務就會變得非常的卡頓，
甚至會看到服務目前無法使用的訊息出現。&lt;/p&gt;
&lt;p&gt;為什麼我會知道這個呢？因為我的家人習慣使用賣貨便的服務來買東西， 所以每次到了這個時候，都會動員全家人想辦法領取優惠券。甚至到後來因為有時候會領取不到，
開始會定半夜2點的鬧鐘起來，在那個時候再領取優惠券。&lt;/p&gt;
&lt;p&gt;但就在最近&lt;/p&gt;
&lt;p&gt;在11-06的要領取雙十一的優惠券的時候，突然發現，領取優惠券的操作，變得十分的滑順。&lt;/p&gt;
&lt;p&gt;仔細一看發現，在按領取後畫面上很快就顯示「已進行領取，優惠券稍後會轉入帳號中」（之類的訊息），並且有個幾秒鐘的讀秒，然後重整頁面，優惠券就到帳了。&lt;/p&gt;
&lt;p&gt;這整個讓使用者體驗變得非常的好，因為使用者馬上就知道自己有領取到了，所以這就減少了非常多的使用者按F5的行為。&lt;/p&gt;
&lt;p&gt;再加上按了領取後，畫面上會有個讀秒的動畫，這和轉圈圈的動畫不同，因為這是已經收到回應了，
也就是說已經告訴使用者，你已經領取到了，只是我們還在跑程序，所以使用者比較不會在這個等待的時間中一直按F5。
在這一套修改下，讓我家人瘋狂稱讚，稱讚現在領取變得好快速。也讓他們不再在半夜起床領取優惠券。&lt;/p&gt;
&lt;p&gt;對於需要長時間運算的操作，很多時候其實可以嘗試使用Asynchronous Request，在增加使用者體驗的同時，也減少使用者等的不耐煩一直按重整導致的request數量。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>PREP輸出框架</title>
        <link>https://coding.fnsne.com/posts/prep-output-framework/</link>
        <pubDate>Tue, 05 Nov 2024 22:13:15 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/prep-output-framework/</guid>
        <description>&lt;h1 id=&#34;prep輸出框架&#34;&gt;PREP輸出框架
&lt;/h1&gt;&lt;p&gt;PREP框架是一種輸出框架，它能夠協助我們快速的整理出一個有邏輯，又很好理解的文章。&lt;/p&gt;
&lt;p&gt;PREP分別是Point（結論）、Reason（理由）、Example（範例）、Point（再次重複結論）。也就是說，一開始的時候就先點題，把結論給寫出來。再來開始開始說明下這個結論的理由是什麼，然後舉例子。最終再次重複結論。在使用這樣的結構下，能夠很快速的讓人理解結論是什麼。
但使用PREP輸出框架需要注意，必須是在閱讀者已經瞭解前提和背景的情況下才能使用。如果閱讀者本身並未已瞭解前提、和背景，在這個時候就先點題，就反而容易讓人一頭霧水，不知道在說什麼。&lt;/p&gt;
&lt;p&gt;但如果在正確的對象上使用PREP，它就能讓我們在最短的時間內，整理出一個邏輯通順，很好理解的文字，快速的傳達出想要表達的內容。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>GeoJSON</title>
        <link>https://coding.fnsne.com/posts/geo-json/</link>
        <pubDate>Mon, 04 Nov 2024 21:28:29 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/geo-json/</guid>
        <description>&lt;h1 id=&#34;關於geojson&#34;&gt;關於GeoJSON
&lt;/h1&gt;&lt;p&gt;GeoJSON是一種基於JSON的地理空間數據交換格式，它定義了幾種類型JSON對象以及它們組合在一起的方法，以表示有關地理要素、屬性和它們的空間範圍的數據。
一個GeoJSON對象可以是&lt;code&gt;Geometry&lt;/code&gt;, &lt;code&gt;Feature&lt;/code&gt;或者&lt;code&gt;FeatureCollection&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;geometry&#34;&gt;Geometry
&lt;/h2&gt;&lt;p&gt;支援 OpenGIS 簡式特性實作所定義的類型 :
Point、LineString、Polygon、MultiPoint、MultiLineString、MultiPolygon 和 GeometryCollection&lt;/p&gt;
&lt;p&gt;格式範例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Linestring&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;coordinates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;10.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;11.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;10.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;11.9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;feature&#34;&gt;Feature
&lt;/h2&gt;&lt;p&gt;由&lt;code&gt;Geometry&lt;/code&gt;加上&lt;code&gt;部分屬性&lt;/code&gt;組成。
部分屬性類似於形狀檔，可包括形狀的屬性或 Placemarks 的 KML 資料夾&lt;/p&gt;
&lt;p&gt;格式範例如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Feature&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;geometry&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Point&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;coordinates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;10.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;20.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;signpost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;last_check&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;20200701&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;featurecollection&#34;&gt;FeatureCollection
&lt;/h2&gt;&lt;p&gt;簡單來說，就是用來放複數Feature的JSON結構（Feature List）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;FeatureCollection&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;features&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Feature&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;geometry&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Point&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;coordinates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;10.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;5.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Feature&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;geometry&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;LineString&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;coordinates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;10.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;10.3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;10.4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;341A7&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;class&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ref&#34;&gt;ref
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/zh-tw/GeoJSON&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zh.wikipedia.org/zh-tw/GeoJSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.ibm.com/docs/zh-tw/db2/11.5?topic=formats-geojson-format&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.ibm.com/docs/zh-tw/db2/11.5?topic=formats-geojson-format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>關於裝飾器模式和責任鏈模式</title>
        <link>https://coding.fnsne.com/posts/decorator-vs-chain-of-responsibility/</link>
        <pubDate>Sun, 03 Nov 2024 21:37:26 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/decorator-vs-chain-of-responsibility/</guid>
        <description>&lt;h1 id=&#34;淺談責任鏈chain-of-responsibility和裝飾器decorator模式的差別&#34;&gt;淺談責任鏈（Chain of Responsibility）和裝飾器（Decorator）模式的差別
&lt;/h1&gt;&lt;p&gt;裝飾器模式和責任鍊模式，都是很常見用來把程式碼邏輯切開，讓不同元件能更明確用code表達其負責的邏輯的方法。&lt;/p&gt;
&lt;p&gt;以下先簡單介紹一下這兩種模式&lt;/p&gt;
&lt;h2 id=&#34;責任鏈模式chain-of-responsibility&#34;&gt;責任鏈模式（Chain of Responsibility）
&lt;/h2&gt;&lt;p&gt;接收輸入物件並沿鏈傳遞請求，直到其中一個handler處理它為止。
從重構的角度來看，當發現code的邏輯可以被切成不同的角色負責的邏輯時，可以重構成責任鍊的形式，分成不同的角色Class，讓各自的邏輯交由不同角色Class來處理。&lt;/p&gt;
&lt;h3 id=&#34;範例&#34;&gt;範例
&lt;/h3&gt;&lt;p&gt;要實作一個HandlerRequest，它可以處理Auth, Log, Data三種類型的Request
使用的時候要像下面例子這樣使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;req1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;User credentials&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;req2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;User activity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;req3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;User data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;HandleRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;HandleRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;HandleRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;未使用責任鍊模式的handlerrequest&#34;&gt;未使用責任鍊模式的HandlerRequest
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;HandleRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Handling authentication: %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Log&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Logging data: %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Data&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Processing data: %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Unknown request type: %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;使用責任鏈模式的handlerrequest&#34;&gt;使用責任鏈模式的HandlerRequest
&lt;/h4&gt;&lt;p&gt;要先定義interface &amp;amp; Base struct&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Handler 定義處理器接口
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// BaseHandler 實作責任鍊的pass邏輯
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BaseHandler&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//只在其他Handler的Constructor中使用
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;BaseHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;BaseHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;handleNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接著實作AuthHandler, LogHandler, DataHandler&lt;/p&gt;
&lt;p&gt;AuthHandler:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// AuthHandler 處理認證請求，並且有自己的參數
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AuthHandler&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;BaseHandler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;authKey&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewAuthHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authKey&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;AuthHandler&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;AuthHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;authKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;authKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;setNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 設置下一個處理器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;AuthHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Handling authentication with key: %s, Payload: %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;handleNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;LogHandler:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// LogHandler 處理日誌請求，並且有自己的參數
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;LogHandler&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;BaseHandler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;logLevel&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewLogHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;logLevel&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LogHandler&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LogHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;logLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;logLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;setNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 設置下一個處理器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LogHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Log&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Logging at level: %s, Payload: %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;logLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;handleNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;DataHandler:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// DataHandler 處理數據請求，並且有自己的參數
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DataHandler&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;BaseHandler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;dataSource&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewDataHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dataSource&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DataHandler&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DataHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;dataSource&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dataSource&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;setNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 設置下一個處理器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DataHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Data&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Processing data from source: %s, Payload:%s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dataSource&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;handleNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後，在main()需要多加上把不同的handler串成一個鍊（這邊是使用constructor注入的方式設定）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// 初始化處理器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;authHandler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewAuthHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;logHandler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewLogHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;dataHandler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewDataHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;logHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// 創建請求
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;req1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;User credentials&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;req2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;User activity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;req3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;User data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// 處理請求
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這樣做的優勢是，如果要修改Auth相關的邏輯，只要到AuthHandler去改即可。&lt;/p&gt;
&lt;p&gt;如果沒有使用責任鏈，當HandlerRequest內部使用的handler數量變得很大，並且決定要不要使用某個handler的邏輯很複雜時，邏輯甚至會互相糾結，讓code就會變得非常的難修改和維護。&lt;/p&gt;
&lt;h2 id=&#34;裝飾器模式decorator&#34;&gt;裝飾器模式（Decorator）
&lt;/h2&gt;&lt;p&gt;在現已有的邏輯上，外掛上額外的邏輯。&lt;/p&gt;
&lt;h3 id=&#34;範例-1&#34;&gt;範例
&lt;/h3&gt;&lt;p&gt;一樣是上面的requestHandler，但現在要加上一個額外的功能：不論處理成功或失敗，都要把結果記錄寫成log。&lt;/p&gt;
&lt;p&gt;這個外掛的功能就可以用decorator來實作，它並不會影響到核心功能，只是額外加其它功能上去。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// LogDecorator 處理數據請求，並且有自己的參數
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;LogDecorator&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;BaseHandler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewLogDecorator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DataHandler&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LogDecorator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;setNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 設置下一個處理器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LogDecorator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;handlerNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;request success&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;request failed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;結論&#34;&gt;結論
&lt;/h2&gt;&lt;p&gt;從實作方面來看，責任鏈和裝飾器的code是大同小異，都是藉由實作相同的interface，把多個邏輯拆分到不同的物件上處理。最後把Object依照順序一層層的注入到其它Object上，形成一個執行的鏈。它們唯一的差別是兩者切分邏輯的方式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;責任鏈是鏈上的每個Object都能獨立完成一種使用情境的邏輯；而裝飾器則是為核心邏輯外掛其它額外的功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;當有核心功能存在，需要外掛附加功能時，這個做法就可以稱為裝飾器模式；而當有不同的handler，
並且每個都可以獨立處理完某一種使用情境時，就稱其為責任鏈模式。一切都是看想要切分的邏輯，是切出核心邏輯和外掛邏輯（裝飾器），
還是切出不同的職責，每個都是一種情境的核心邏輯（責任鏈）。他們的形式可以長得一樣，差別只在於他們切分產生出來的handler能否獨立完成一種工作。&lt;/p&gt;
&lt;h2 id=&#34;資料來源&#34;&gt;資料來源
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://coderanch.com/t/668194/certification/Difference-Decorator-Chain-Responsibility-patterns&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://coderanch.com/t/668194/certification/Difference-Decorator-Chain-Responsibility-patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>關於Golang的泛型</title>
        <link>https://coding.fnsne.com/posts/golang-generic/</link>
        <pubDate>Sat, 02 Nov 2024 22:59:36 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/golang-generic/</guid>
        <description>&lt;h1 id=&#34;淺談golang-generic-泛型&#34;&gt;淺談Golang Generic 泛型
&lt;/h1&gt;&lt;h2 id=&#34;什麼是泛型&#34;&gt;什麼是泛型？
&lt;/h2&gt;&lt;p&gt;泛型（Generic）是一種用來協助製作通用function、struct用的功能。
在泛型還沒有支援之前，要製作通用的function、stuct，通常就只能在輸入、輸出的地方使用&lt;code&gt;interface{}&lt;/code&gt;結構。
而且這樣做需要很小心的檢查使用是的形態是否正確。&lt;/p&gt;
&lt;h2 id=&#34;在function參數上使用泛型&#34;&gt;在function參數上使用泛型
&lt;/h2&gt;&lt;p&gt;在使用泛型之前，我們會使用&lt;code&gt;interface{}&lt;/code&gt;來製作通用function&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nb&#34;&gt;panic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;not support type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是這樣每次要增加新的可以接受的結構時，就再需要增加不少的檢查code。而在有了泛型以後，這段的檢查，就可以交由編譯器來處理了。
就可以變成以下這樣&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;](&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//調用時如下
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;](&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;即使未來有需要再增加支援int64形態，也只需要在中括號中再加上即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;](&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在struct上使用泛型&#34;&gt;在struct上使用泛型
&lt;/h2&gt;&lt;p&gt;泛型也支援在struct上面使用。&lt;/p&gt;
&lt;p&gt;以下的例子是在定義API回傳JSON格式時，不論什麼情況，都需要擁有Code, Params, Data這三個Field，而Data才是用來放置該API的回傳值。
但要做到這樣，等於每個module中，都要重新再定義一次，確實很惱人。&lt;/p&gt;
&lt;p&gt;後來公司同事想到可以利用泛型，來定義出通用的回傳框架，只要使用這個struct，就可以產出有基本結構的struct出來。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DataResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Code&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;code&amp;#34;`&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Params&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;params&amp;#34;`&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Data&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;        &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;data&amp;#34;`&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這樣以後要定義回傳結構時，就不用每次重複定義Code和Params了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Name&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Avatar&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DataResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;GetUserResponse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;總結&#34;&gt;總結
&lt;/h2&gt;&lt;p&gt;泛型的使用情境，是用來製作通用struct、通用function時使用的。
例如：通用的回傳結構、通用的資料結構（如Stack）。
但對我個人而言，我很少用到它，因為目前工作上面，我都是在做應用層面的功能開發，而不是寫Library。大部分需要用抽象整合起來的地方，都是使用interface來抽的。
幾乎沒有機會遇到必須使用泛型的情況，所以我對於泛型的認知也只到這邊而已。&lt;/p&gt;
&lt;h2 id=&#34;ref&#34;&gt;ref
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.digitalocean.com/community/tutorials/how-to-use-generics-in-go#go-collections-with-generics&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.digitalocean.com/community/tutorials/how-to-use-generics-in-go#go-collections-with-generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://go.dev/doc/tutorial/generics&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://go.dev/doc/tutorial/generics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>探討在Golang_gorm上使用樂觀鎖的做法</title>
        <link>https://coding.fnsne.com/posts/golang-gorm-optimistic-lock/</link>
        <pubDate>Fri, 01 Nov 2024 13:42:30 +0800</pubDate>
        
        <guid>https://coding.fnsne.com/posts/golang-gorm-optimistic-lock/</guid>
        <description>&lt;h1 id=&#34;探討在golang_gorm上使用樂觀鎖的做法&#34;&gt;探討在Golang_gorm上使用樂觀鎖的做法
&lt;/h1&gt;&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://gorm.io/docs/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gorm&lt;/a&gt;上如果要使用Optimistic locking的話，使用&lt;a class=&#34;link&#34; href=&#34;https://github.com/go-gorm/optimisticlock&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;go-gorm optimisticlock&lt;/a&gt;會是一個好選擇。因為它只需要在Model定義好，就可以正常使用了。可以避免實作的時候忘記加上&lt;code&gt;WHERE version = ?&lt;/code&gt;的條件。而變成沒有使用樂觀鎖保護資料的情況。&lt;/p&gt;
&lt;h2 id=&#34;為什麼要使用樂觀鎖&#34;&gt;為什麼要使用樂觀鎖？
&lt;/h2&gt;&lt;p&gt;樂觀鎖實際上是沒有使用到Lock的，所以在沒有衝突的情況下，每筆資料的更新速度，會比有使用Lock的情況還要快速。 所以在資料庫更新頻率較低的時候，樂觀鎖是一個不錯的選擇。
樂觀鎖的缺點是，如果有兩個人同時更新同一筆資料，就會有一個人的更新會失敗。這時候就需要重新讀取資料，再重新更新一次。所以不適合在資料更新頻率很高的情況下使用。&lt;/p&gt;
&lt;p&gt;另一方面，在產品還在MVP階段的時候，重點是趕快把Business Model 實作出來放到市場上，看看市場反應如何。能儘量快一點把功能做出來會越好。等確定這個功能是真的有市場，再來考慮優化效能方面的問題。
使用樂觀鎖+ORM，能簡化開發要寫的code，因為使用樂觀鎖+OR，就能讓大部分的code都變成，&lt;code&gt;取出該筆資料-&amp;gt;更新欄位的值-&amp;gt;整筆存起來&lt;/code&gt;，並且可以避免資料更新的時候，用到別人更新的資料（race condition），
這樣幾乎每個table就只需要有&lt;code&gt;Get&lt;/code&gt;、&lt;code&gt;Update&lt;/code&gt;就能完成所有更新的操作了。因此在MVP階段，使用樂觀鎖是一個不錯的選擇。&lt;/p&gt;
&lt;p&gt;以下列出各種寫法，就能很清楚的看出來使用樂觀鎖的好處，還有為什麼要使用Optimisticlock套件了。&lt;/p&gt;
&lt;h2 id=&#34;範例&#34;&gt;範例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;table &lt;code&gt;books&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;table 欄位有 &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;updated_at&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每賣出一本書，就要讓count加1。
請實作出AddBookCount的方法。&lt;/p&gt;
&lt;h3 id=&#34;方法1使用atomic-update&#34;&gt;方法1：使用Atomic Update
&lt;/h3&gt;&lt;p&gt;剛好這個例子只需要更新一個欄位的值，所以可以使用Atomic Update來實作。但在一些複雜的情境下，並不是單純的對原本的數值做加減的情況，就不能使用這個方法，而是需要使用下面其它的方法了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gorm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;AddBookCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;Where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;Update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;count = count + ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nf&#34;&gt;Update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;updated_at&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;方法2使用lock&#34;&gt;方法2：使用lock
&lt;/h3&gt;&lt;p&gt;這個做法，在大部分的情況下可以正常運作。（例外：Phantom Read, Write Skew的情況)。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gorm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;AddBookCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;tx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//lock the book record
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Book&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Clauses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;clause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Locking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Strength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;UPDATE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;tx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Rollback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;//update the book record
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;tx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Rollback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;tx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;方法3使用樂觀鎖&#34;&gt;方法3：使用樂觀鎖
&lt;/h3&gt;&lt;p&gt;雖然看起來都有點複雜，但只要是針對一個record的更新，都可以簡化成同樣的流程：&lt;code&gt;取出該筆資料-&amp;gt;更新欄位的值-&amp;gt;整筆存起來&lt;/code&gt;。這樣在一些比較複雜的情境裡面，就可以用相對簡單的方式實作出來。&lt;/p&gt;
&lt;h4 id=&#34;用updatedat來自己實作&#34;&gt;用UpdatedAt來自己實作
&lt;/h4&gt;&lt;p&gt;常見的做法，使用updated_at欄位來做為樂觀鎖的版本號，但這個方法有一個缺點：如果更新在比updated_at記錄的時間顆粒度還小的時間內一起發生，就會發生問題。例如updated_at的顆粒度是秒，但有多個request在同一秒內更新，就會相撞。
所以這個做法要很小心，注意更新的頻率和updated_at資料的顆粒度。但通常來說，如果更新頻率偏高，通常就會開始改成使用Lock的方式，而不是樂觀鎖了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gorm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;AddBookCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//lock the book record
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Book&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;id = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;//update the book record
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;updated_at = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;UpdatedAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Updates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//檢查是否成功更新
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;AffectedRows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;更新失敗&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;用version欄位來自己實作&#34;&gt;用Version欄位來自己實作
&lt;/h4&gt;&lt;p&gt;能避免上面&lt;code&gt;用updated_at來實作樂觀鎖&lt;/code&gt;提到的缺點。但是必須要在欄位上，多加上一個version的欄位&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gorm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;AddBookCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Book&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;id = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;currentVersion&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Version&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Version&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;version = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;currentVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Updates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 檢查是否成功更新
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;RowsAffected&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;更新失敗&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;使用go-gormoptimisticlock&#34;&gt;使用go-gorm/optimisticlock
&lt;/h4&gt;&lt;p&gt;在Model使用optimisticlock.Version&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Book&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;ID&lt;/span&gt;         &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Title&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Count&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;UpdatedAt&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Version&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;optimisticlock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Version&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gorm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BookRepo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;AddBookCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Book&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;id = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bookID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 檢查是否成功更新
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;RowsAffected&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;更新失敗&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完整範例&lt;a class=&#34;link&#34; href=&#34;https://github.com/fnsne/gormOptimisticLockExample&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在此&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;結論&#34;&gt;結論
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用Atomic Update的方式，速度最快，但不一定適用於所有的情況。&lt;/li&gt;
&lt;li&gt;使用Lock的方式，能夠避免race condition的發生，但因為要取得、釋放lock，所以每個request執行所需要的時間會比較長一些。當然，在更新頻率較高的情況下，多等一下下，總是比全部重新來過還要快。&lt;/li&gt;
&lt;li&gt;如果要在Gorm上使用樂觀鎖，這個時候使用樂觀鎖套件會比較好，因為不論是哪種自己實作的樂觀鎖，都會需要多加一些檢查的條件，但在使用樂觀鎖套件的時候，只需要在Model上加上&lt;code&gt;optimisticlock.Version&lt;/code&gt;，剩下的就是照常的使用Gorm的方法就好了。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
